// <auto-generated />
using System;
using GrpcService.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrpcService.Migrations
{
    [DbContext(typeof(GrpcDbContext))]
    [Migration("20231003202340_ChangedDbModelForGradesOnly")]
    partial class ChangedDbModelForGradesOnly
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GrpcService.Models.Course", b =>
                {
                    b.Property<Guid>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CourseID");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("GrpcService.Models.Grade", b =>
                {
                    b.Property<Guid>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfGradeSubmision")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GradeValue")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<Guid>("GradedCourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GradedStudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProfessorAssessingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GradeId");

                    b.HasIndex("GradedCourseId");

                    b.HasIndex("GradedStudentId");

                    b.HasIndex("ProfessorAssessingId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("GrpcService.Models.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Person");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("GrpcService.Models.Professor", b =>
                {
                    b.HasBaseType("GrpcService.Models.Person");

                    b.Property<string>("IdCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Professor");
                });

            modelBuilder.Entity("GrpcService.Models.Student", b =>
                {
                    b.HasBaseType("GrpcService.Models.Person");

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("GrpcService.Models.Course", b =>
                {
                    b.HasOne("GrpcService.Models.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("GrpcService.Models.Grade", b =>
                {
                    b.HasOne("GrpcService.Models.Course", "GradedCourse")
                        .WithMany("Grades")
                        .HasForeignKey("GradedCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrpcService.Models.Student", "GradedStudent")
                        .WithMany("Grades")
                        .HasForeignKey("GradedStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrpcService.Models.Professor", "ProfessorAssessing")
                        .WithMany()
                        .HasForeignKey("ProfessorAssessingId");

                    b.Navigation("GradedCourse");

                    b.Navigation("GradedStudent");

                    b.Navigation("ProfessorAssessing");
                });

            modelBuilder.Entity("GrpcService.Models.Course", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("GrpcService.Models.Student", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
