// <auto-generated />
namespace FsUniversityApi.Migrations

open System
open FsUniversityApi.Database
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion

[<DbContext(typeof<FsDbContext.FsDbContext>)>]
type FsDbContextModelSnapshot() =
    inherit ModelSnapshot()

    override this.BuildModel(modelBuilder: ModelBuilder) =
        modelBuilder
            .HasAnnotation("ProductVersion", "6.0.7")
            .HasAnnotation("Relational:MaxIdentifierLength", 128) |> ignore

        modelBuilder.Entity("FsUniversityApi.Database.Entities.Course+Course", (fun b ->

            b.Property<Guid>("CourseId")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<string>("CourseCode")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<string>("CourseName")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<int>("ECTS")
                .IsRequired(true)
                .HasColumnType("int")
                |> ignore

            b.Property<bool>("IsFinishedWithExam")
                .IsRequired(true)
                .HasColumnType("bit")
                |> ignore

            b.Property<bool>("SoftDeleted")
                .IsRequired(true)
                .HasColumnType("bit")
                |> ignore

            b.HasKey("CourseId")
                |> ignore


            b.ToTable("Courses") |> ignore


            b.HasData([|
                {| CourseId = Guid("752480f3-d89c-41f8-aec3-269755b18e68"); CourseCode = "C01"; CourseName = "Java course"; ECTS = 2; IsFinishedWithExam = false; SoftDeleted = false |}
                {| CourseId = Guid("919aaa3f-db4d-4888-a4a4-9dd75e8e5140"); CourseCode = "C02"; CourseName = "Databases"; ECTS = 4; IsFinishedWithExam = true; SoftDeleted = false |}
                {| CourseId = Guid("c17343d0-9c27-4492-8f06-18d14be7418a"); CourseCode = "C03"; CourseName = "Algorithms"; ECTS = 5; IsFinishedWithExam = true; SoftDeleted = false |}
             |]) |> ignore
        )) |> ignore

        modelBuilder.Entity("FsUniversityApi.Database.Entities.Person+PersonInfo", (fun b ->

            b.Property<Guid>("PersonInfoId")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<Guid>("ApplicationUserId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<DateTime>("Birthday")
                .IsRequired(true)
                .HasColumnType("datetime2")
                |> ignore

            b.Property<string>("FirstName")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<string>("LastName")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<string>("MotherLand")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<string>("PESEL")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<int>("PersonStatus")
                .IsRequired(true)
                .HasColumnType("int")
                |> ignore

            b.Property<bool>("SoftDeleted")
                .IsRequired(true)
                .HasColumnType("bit")
                |> ignore

            b.HasKey("PersonInfoId")
                |> ignore


            b.ToTable("People") |> ignore


            b.HasData([|
                {| PersonInfoId = Guid("51a163c4-0aa4-4b18-b7ea-2972337675a5"); ApplicationUserId = Guid("b4d0090b-846a-428b-b220-0fc03903a581"); Birthday = DateTime(1980, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified); FirstName = "Alan"; LastName = "Turner"; MotherLand = "USA"; PESEL = "01111111111"; PersonStatus = 2; SoftDeleted = false |}
                {| PersonInfoId = Guid("9b8c7ee3-6223-4545-ad28-307b662e704b"); ApplicationUserId = Guid("d5507b20-8bd2-434a-999a-d674812a3948"); Birthday = DateTime(1975, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified); FirstName = "Bonnie"; LastName = "Clyde"; MotherLand = "USA"; PESEL = "02222222222"; PersonStatus = 2; SoftDeleted = false |}
                {| PersonInfoId = Guid("0bb05af6-6733-4d45-95f7-1ffa43fbc019"); ApplicationUserId = Guid("2c46788e-bef0-44dc-b738-5499e8c9f409"); Birthday = DateTime(1990, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified); FirstName = "Celina"; LastName = "Domczyk"; MotherLand = "Poland"; PESEL = "03333333333"; PersonStatus = 2; SoftDeleted = false |}
                {| PersonInfoId = Guid("856aab27-535f-4531-8d46-317a05e18b07"); ApplicationUserId = Guid("3b1a2509-1699-490c-8553-eafb0d36efd5"); Birthday = DateTime(2000, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified); FirstName = "Daniel"; LastName = "Danielczyk"; MotherLand = "Poland"; PESEL = "04444444444"; PersonStatus = 1; SoftDeleted = false |}
                {| PersonInfoId = Guid("7be1963d-ac7c-4e42-9ff3-211407a19115"); ApplicationUserId = Guid("f5d7ec13-dbd8-4de9-9f9c-b1a550814756"); Birthday = DateTime(1999, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified); FirstName = "Hans"; LastName = "Zammer"; MotherLand = "Germany"; PESEL = "05555555555"; PersonStatus = 1; SoftDeleted = false |}
                {| PersonInfoId = Guid("9f00a682-386b-49cc-9228-3b5e6f97d261"); ApplicationUserId = Guid("96479ff8-cfd1-4c3f-840b-f36aacebd5c8"); Birthday = DateTime(2001, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified); FirstName = "Juan"; LastName = "Garcia"; MotherLand = "Spain"; PESEL = "06666666666"; PersonStatus = 1; SoftDeleted = false |}
             |]) |> ignore
        )) |> ignore

        modelBuilder.Entity("FsUniversityApi.Database.Entities.Professor+Professor", (fun b ->

            b.Property<Guid>("PersonInfoId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<DateTime>("FirstDayAtJob")
                .IsRequired(true)
                .HasColumnType("datetime2")
                |> ignore

            b.Property<string>("IdCode")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<int>("Salary")
                .IsRequired(true)
                .HasColumnType("int")
                |> ignore

            b.Property<string>("Subject")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.HasKey("PersonInfoId")
                |> ignore


            b.ToTable("Professors") |> ignore

        )) |> ignore

        modelBuilder.Entity("FsUniversityApi.Database.Entities.Student+Student", (fun b ->

            b.Property<Guid>("PersonInfoId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<DateTime>("BeginningOfStudying")
                .IsRequired(true)
                .HasColumnType("datetime2")
                |> ignore

            b.Property<string>("Index")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.HasKey("PersonInfoId")
                |> ignore


            b.ToTable("Students") |> ignore

        )) |> ignore
        modelBuilder.Entity("FsUniversityApi.Database.Entities.Professor+Professor", (fun b ->
            b.HasOne("FsUniversityApi.Database.Entities.Person+PersonInfo", "PersonInfo")
                .WithOne()
                .HasForeignKey("FsUniversityApi.Database.Entities.Professor+Professor", "PersonInfoId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore
        modelBuilder.Entity("FsUniversityApi.Database.Entities.Student+Student", (fun b ->
            b.HasOne("FsUniversityApi.Database.Entities.Person+PersonInfo", "PersonInfo")
                .WithOne()
                .HasForeignKey("FsUniversityApi.Database.Entities.Student+Student", "PersonInfoId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore

