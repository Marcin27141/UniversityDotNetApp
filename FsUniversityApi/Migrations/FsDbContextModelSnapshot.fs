// <auto-generated />
namespace FsUniversityApi.Migrations

open System
open FsUniversityApi.Database
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion

[<DbContext(typeof<FsDbContext.FsDbContext>)>]
type FsDbContextModelSnapshot() =
    inherit ModelSnapshot()

    override this.BuildModel(modelBuilder: ModelBuilder) =
        modelBuilder
            .HasAnnotation("ProductVersion", "6.0.7")
            .HasAnnotation("Relational:MaxIdentifierLength", 128) |> ignore

        modelBuilder.Entity("CourseProfessor", (fun b ->

            b.Property<Guid>("CoursesCourseId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<Guid>("ProfessorsPersonInfoId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.HasKey("CoursesCourseId", "ProfessorsPersonInfoId")
                |> ignore


            b.HasIndex("ProfessorsPersonInfoId")
                |> ignore

            b.ToTable("CourseProfessor") |> ignore

        )) |> ignore

        modelBuilder.Entity("CourseStudent", (fun b ->

            b.Property<Guid>("CoursesCourseId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<Guid>("StudentsPersonInfoId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.HasKey("CoursesCourseId", "StudentsPersonInfoId")
                |> ignore


            b.HasIndex("StudentsPersonInfoId")
                |> ignore

            b.ToTable("CourseStudent") |> ignore

        )) |> ignore

        modelBuilder.Entity("FsUniversityApi.Database.Entities.Person+PersonInfo", (fun b ->

            b.Property<Guid>("PersonInfoId")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<Guid>("ApplicationUserId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<DateTime>("Birthday")
                .IsRequired(true)
                .HasColumnType("datetime2")
                |> ignore

            b.Property<string>("FirstName")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<string>("LastName")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<string>("MotherLand")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<string>("PESEL")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<int>("PersonStatus")
                .IsRequired(true)
                .HasColumnType("int")
                |> ignore

            b.Property<bool>("SoftDeleted")
                .IsRequired(true)
                .HasColumnType("bit")
                |> ignore

            b.HasKey("PersonInfoId")
                |> ignore


            b.ToTable("People") |> ignore


            b.HasData([|
                {| PersonInfoId = Guid("d83f5e35-d036-4ca7-bff2-8c825e1f7792"); ApplicationUserId = Guid("abee1275-1500-481b-ac0c-f1455cdff1fd"); Birthday = DateTime(1980, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified); FirstName = "Alan"; LastName = "Turner"; MotherLand = "USA"; PESEL = "01111111111"; PersonStatus = 2; SoftDeleted = false |}
                {| PersonInfoId = Guid("6405fb4c-9166-4c97-85a7-be283998d8f7"); ApplicationUserId = Guid("0baf9e5e-eaf3-42be-8526-f8ed605ef982"); Birthday = DateTime(1975, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified); FirstName = "Bonnie"; LastName = "Clyde"; MotherLand = "USA"; PESEL = "02222222222"; PersonStatus = 2; SoftDeleted = false |}
                {| PersonInfoId = Guid("804117ab-cd41-4f43-bb82-1cf4a3a2063b"); ApplicationUserId = Guid("071cafe2-cc61-49f4-9dc9-928bfbac180b"); Birthday = DateTime(1990, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified); FirstName = "Celina"; LastName = "Domczyk"; MotherLand = "Poland"; PESEL = "03333333333"; PersonStatus = 2; SoftDeleted = false |}
                {| PersonInfoId = Guid("610fe833-6c52-4824-9458-ab7aebd7bbc5"); ApplicationUserId = Guid("d18e8b7f-f736-4bce-bb09-e2583be3ac8e"); Birthday = DateTime(2000, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified); FirstName = "Daniel"; LastName = "Danielczyk"; MotherLand = "Poland"; PESEL = "04444444444"; PersonStatus = 1; SoftDeleted = false |}
                {| PersonInfoId = Guid("3395f603-008d-4e8c-830e-230d07af7d64"); ApplicationUserId = Guid("0e0fa499-6f01-48db-a303-232b5e657f52"); Birthday = DateTime(1999, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified); FirstName = "Hans"; LastName = "Zammer"; MotherLand = "Germany"; PESEL = "05555555555"; PersonStatus = 1; SoftDeleted = false |}
                {| PersonInfoId = Guid("88bc7883-1949-49f6-9cb6-bc3a0bbc9b5c"); ApplicationUserId = Guid("4771c23a-fc03-4573-8726-2100ed585e0a"); Birthday = DateTime(2001, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified); FirstName = "Juan"; LastName = "Garcia"; MotherLand = "Spain"; PESEL = "06666666666"; PersonStatus = 1; SoftDeleted = false |}
             |]) |> ignore
        )) |> ignore

        modelBuilder.Entity("FsUniversityApi.Database.Entities.StudentCourseProfessor+Course", (fun b ->

            b.Property<Guid>("CourseId")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<string>("CourseCode")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<string>("CourseName")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<int>("ECTS")
                .IsRequired(true)
                .HasColumnType("int")
                |> ignore

            b.Property<bool>("IsFinishedWithExam")
                .IsRequired(true)
                .HasColumnType("bit")
                |> ignore

            b.Property<bool>("SoftDeleted")
                .IsRequired(true)
                .HasColumnType("bit")
                |> ignore

            b.HasKey("CourseId")
                |> ignore


            b.ToTable("Courses") |> ignore


            b.HasData([|
                {| CourseId = Guid("e7d41524-7c6e-4f2e-ac59-59d1a3da93ce"); CourseCode = "C01"; CourseName = "Java course"; ECTS = 2; IsFinishedWithExam = false; SoftDeleted = false |}
                {| CourseId = Guid("216a812a-5daa-42b9-9009-85ddbd2a4df2"); CourseCode = "C02"; CourseName = "Databases"; ECTS = 4; IsFinishedWithExam = true; SoftDeleted = false |}
                {| CourseId = Guid("278e4e18-298b-463f-85b5-0e30c24a23a3"); CourseCode = "C03"; CourseName = "Algorithms"; ECTS = 5; IsFinishedWithExam = true; SoftDeleted = false |}
             |]) |> ignore
        )) |> ignore

        modelBuilder.Entity("FsUniversityApi.Database.Entities.StudentCourseProfessor+Professor", (fun b ->

            b.Property<Guid>("PersonInfoId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<DateTime>("FirstDayAtJob")
                .IsRequired(true)
                .HasColumnType("datetime2")
                |> ignore

            b.Property<string>("IdCode")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<int>("Salary")
                .IsRequired(true)
                .HasColumnType("int")
                |> ignore

            b.Property<string>("Subject")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.HasKey("PersonInfoId")
                |> ignore


            b.ToTable("Professors") |> ignore

        )) |> ignore

        modelBuilder.Entity("FsUniversityApi.Database.Entities.StudentCourseProfessor+Student", (fun b ->

            b.Property<Guid>("PersonInfoId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<DateTime>("BeginningOfStudying")
                .IsRequired(true)
                .HasColumnType("datetime2")
                |> ignore

            b.Property<string>("Index")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.HasKey("PersonInfoId")
                |> ignore


            b.ToTable("Students") |> ignore

        )) |> ignore
        modelBuilder.Entity("CourseProfessor", (fun b ->
            b.HasOne("FsUniversityApi.Database.Entities.StudentCourseProfessor+Course", null)
                .WithMany()
                .HasForeignKey("CoursesCourseId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore
            b.HasOne("FsUniversityApi.Database.Entities.StudentCourseProfessor+Professor", null)
                .WithMany()
                .HasForeignKey("ProfessorsPersonInfoId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore
        modelBuilder.Entity("CourseStudent", (fun b ->
            b.HasOne("FsUniversityApi.Database.Entities.StudentCourseProfessor+Course", null)
                .WithMany()
                .HasForeignKey("CoursesCourseId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore
            b.HasOne("FsUniversityApi.Database.Entities.StudentCourseProfessor+Student", null)
                .WithMany()
                .HasForeignKey("StudentsPersonInfoId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore
        modelBuilder.Entity("FsUniversityApi.Database.Entities.StudentCourseProfessor+Professor", (fun b ->
            b.HasOne("FsUniversityApi.Database.Entities.Person+PersonInfo", "PersonInfo")
                .WithOne()
                .HasForeignKey("FsUniversityApi.Database.Entities.StudentCourseProfessor+Professor", "PersonInfoId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore
        modelBuilder.Entity("FsUniversityApi.Database.Entities.StudentCourseProfessor+Student", (fun b ->
            b.HasOne("FsUniversityApi.Database.Entities.Person+PersonInfo", "PersonInfo")
                .WithOne()
                .HasForeignKey("FsUniversityApi.Database.Entities.StudentCourseProfessor+Student", "PersonInfoId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore

