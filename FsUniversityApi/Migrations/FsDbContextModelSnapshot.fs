// <auto-generated />
namespace FsUniversityApi.Migrations

open System
open FsUniversityApi.Database
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion

[<DbContext(typeof<FsDbContext.FsDbContext>)>]
type FsDbContextModelSnapshot() =
    inherit ModelSnapshot()

    override this.BuildModel(modelBuilder: ModelBuilder) =
        modelBuilder
            .HasAnnotation("ProductVersion", "6.0.7")
            .HasAnnotation("Relational:MaxIdentifierLength", 128) |> ignore

        modelBuilder.Entity("CourseStudent", (fun b ->

            b.Property<Guid>("CoursesCourseId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<Guid>("StudentsPersonInfoId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.HasKey("CoursesCourseId", "StudentsPersonInfoId")
                |> ignore


            b.HasIndex("StudentsPersonInfoId")
                |> ignore

            b.ToTable("CourseStudent") |> ignore

        )) |> ignore

        modelBuilder.Entity("FsUniversityApi.Database.Entities.Person+PersonInfo", (fun b ->

            b.Property<Guid>("PersonInfoId")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<Guid>("ApplicationUserId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<DateTime>("Birthday")
                .IsRequired(true)
                .HasColumnType("datetime2")
                |> ignore

            b.Property<string>("FirstName")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<string>("LastName")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<string>("MotherLand")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<string>("PESEL")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<int>("PersonStatus")
                .IsRequired(true)
                .HasColumnType("int")
                |> ignore

            b.Property<bool>("SoftDeleted")
                .IsRequired(true)
                .HasColumnType("bit")
                |> ignore

            b.HasKey("PersonInfoId")
                |> ignore


            b.ToTable("People") |> ignore

        )) |> ignore

        modelBuilder.Entity("FsUniversityApi.Database.Entities.Professor+Professor", (fun b ->

            b.Property<Guid>("PersonInfoId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<DateTime>("FirstDayAtJob")
                .IsRequired(true)
                .HasColumnType("datetime2")
                |> ignore

            b.Property<string>("IdCode")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<int>("Salary")
                .IsRequired(true)
                .HasColumnType("int")
                |> ignore

            b.Property<string>("Subject")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.HasKey("PersonInfoId")
                |> ignore


            b.ToTable("Professors") |> ignore

        )) |> ignore

        modelBuilder.Entity("FsUniversityApi.Database.Entities.StudentAndCourse+Course", (fun b ->

            b.Property<Guid>("CourseId")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<string>("CourseCode")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<string>("CourseName")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.Property<int>("ECTS")
                .IsRequired(true)
                .HasColumnType("int")
                |> ignore

            b.Property<bool>("IsFinishedWithExam")
                .IsRequired(true)
                .HasColumnType("bit")
                |> ignore

            b.Property<bool>("SoftDeleted")
                .IsRequired(true)
                .HasColumnType("bit")
                |> ignore

            b.HasKey("CourseId")
                |> ignore


            b.ToTable("Courses") |> ignore

        )) |> ignore

        modelBuilder.Entity("FsUniversityApi.Database.Entities.StudentAndCourse+Student", (fun b ->

            b.Property<Guid>("PersonInfoId")
                .IsRequired(true)
                .HasColumnType("uniqueidentifier")
                |> ignore

            b.Property<DateTime>("BeginningOfStudying")
                .IsRequired(true)
                .HasColumnType("datetime2")
                |> ignore

            b.Property<string>("Index")
                .IsRequired(true)
                .HasColumnType("nvarchar(max)")
                |> ignore

            b.HasKey("PersonInfoId")
                |> ignore


            b.ToTable("Students") |> ignore

        )) |> ignore
        modelBuilder.Entity("CourseStudent", (fun b ->
            b.HasOne("FsUniversityApi.Database.Entities.StudentAndCourse+Course", null)
                .WithMany()
                .HasForeignKey("CoursesCourseId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore
            b.HasOne("FsUniversityApi.Database.Entities.StudentAndCourse+Student", null)
                .WithMany()
                .HasForeignKey("StudentsPersonInfoId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore
        modelBuilder.Entity("FsUniversityApi.Database.Entities.Professor+Professor", (fun b ->
            b.HasOne("FsUniversityApi.Database.Entities.Person+PersonInfo", "PersonInfo")
                .WithOne()
                .HasForeignKey("FsUniversityApi.Database.Entities.Professor+Professor", "PersonInfoId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore
        modelBuilder.Entity("FsUniversityApi.Database.Entities.StudentAndCourse+Student", (fun b ->
            b.HasOne("FsUniversityApi.Database.Entities.Person+PersonInfo", "PersonInfo")
                .WithOne()
                .HasForeignKey("FsUniversityApi.Database.Entities.StudentAndCourse+Student", "PersonInfoId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore

